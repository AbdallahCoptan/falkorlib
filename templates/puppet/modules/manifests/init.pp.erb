# File::      <tt>init.pp</tt>
# Author::    <%= config[:author] %> (<%= config[:mail] %>)
# Copyright:: Copyright (c) <%= Time.now.year %> <%= config[:author] %>
# License::   <%= config[:license].capitalize %>
#
# ------------------------------------------------------------------------------
# = Class: <%= config[:shortname] %>
#
# <%= config[:summary] %>
#
# == Parameters:
#
# $ensure:: *Default*: 'present'. Ensure the presence (or absence) of <%= config[:shortname] %>
#
# == Actions:
#
# Install and configure <%= config[:shortname] %>
#
# == Requires:
#
# n/a
#
# == Sample Usage:
#
#     include '<%= config[:shortname] %>'
#
# You can then specialize the various aspects of the configuration,
# for instance:
#
#         class { '<%= config[:shortname] %>':
#             ensure => 'present'
#         }
#
# == Warnings
#
# /!\ Always respect the style guide available
# here[http://docs.puppetlabs.com/guides/style_guide]
#
#
# [Remember: No empty lines between comments and class definition]
#
class <%= config[:shortname] %>(
    $ensure = $<%= config[:shortname] %>::params::ensure
)
inherits <%= config[:shortname] %>::params
{
    info ("Configuring <%= config[:shortname] %> (with ensure = ${ensure})")

    if ! ($ensure in [ 'present', 'absent' ]) {
        fail("<%= config[:shortname] %> 'ensure' parameter must be set to either 'absent' or 'present'")
    }

    case $::operatingsystem {
        debian, ubuntu:         { include <%= config[:shortname] %>::common::debian }
        redhat, fedora, centos: { include <%= config[:shortname] %>::common::redhat }
        default: {
            fail("Module $module_name is not supported on $operatingsystem")
        }
    }
}



